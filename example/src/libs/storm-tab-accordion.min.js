!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.StormTabAccordion=e()}(this,function(){"use strict";function t(t,e){var i=[].slice.call(document.querySelectorAll(t));if(0===i.length)throw new Error("TabAccordion cannot be initialised, no augmentable elements found");return i.forEach(function(t,i){n[i]=STORM.UTILS.assign(Object.create(l),{DOMElement:t,settings:STORM.UTILS.merge({},a,e)}),n[i].init()}),n}function e(e,s){i(),t(e,s)}function i(){n=[]}var s={RETURN:13,TAB:9},n=[],r=["click","keydown","touchstart"],a={tabClass:".js-tab-accordion-tab",titleClass:".js-tab-accordion-title",currentClass:"active",active:0},l={init:function(){this.tabs=[].slice.call(this.DOMElement.querySelectorAll(this.settings.tabClass)),this.titles=[].slice.call(this.DOMElement.querySelectorAll(this.settings.titleClass)),this.triggers=this.titles.concat(this.tabs),this.targets=this.tabs.map(function(t){return document.getElementById(t.getAttribute("href").substr(1))||console.error("Tab target not found")}),this.current=this.settings.active,this.initAria(),this.initTriggers(this.tabs),this.initTriggers(this.titles),this.open(this.current)},initAria:function(){return this.triggers.forEach(function(t){STORM.UTILS.attributelist.set(t,{role:"tab",tabIndex:0,"aria-expanded":!1,"aria-selected":!1,"aria-controls":t.getAttribute("href")?t.getAttribute("href").substr(1):t.parentNode.getAttribute("id")})}),this.targets.forEach(function(t){STORM.UTILS.attributelist.set(t,{role:"tabpanel","aria-hidden":!0,tabIndex:"-1"})}),this},initTriggers:function(t){var e=function(t){this.toggle(t)};return t.forEach(function(t,i){r.forEach(function(n){t.addEventListener(n,function(t){t.keyCode&&t.keyCode===s.TAB||t.keyCode&&t.keyCode!==s.RETURN||(t.preventDefault(),e.call(this,i))}.bind(this),!1)}.bind(this))}.bind(this)),this},change:function(t,e){var i={open:{classlist:"add",tabIndex:{target:this.targets[e],value:"0"}},close:{classlist:"remove",tabIndex:{target:this.targets[this.current],value:"-1"}}};STORM.UTILS.classlist(this.tabs[e])[i[t].classlist](this.settings.currentClass),STORM.UTILS.classlist(this.titles[e])[i[t].classlist](this.settings.currentClass),STORM.UTILS.classlist(this.targets[e])[i[t].classlist](this.settings.currentClass),STORM.UTILS.attributelist.toggle(this.targets[e],"aria-hidden"),STORM.UTILS.attributelist.toggle(this.tabs[e],["aria-selected","aria-expanded"]),STORM.UTILS.attributelist.toggle(this.titles[e],["aria-selected","aria-expanded"]),STORM.UTILS.attributelist.set(i[t].tabIndex.target,{tabIndex:i[t].tabIndex.value})},open:function(t){return this.change("open",t),this.current=t,this},close:function(t){return this.change("close",t),this},toggle:function(t){return this.current!==t?null===this.current?(this.open(t),this):(this.close(this.current).open(t),this):void 0}};return{init:t,reload:e,destroy:i}});